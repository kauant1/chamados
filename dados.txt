<!-- Adicione isso no seu arquivo HTML -->
<table id="task-table">
  <thead>
    <tr>
      <th>Tarefa</th>
      <th>A√ß√µes</th>
    </tr>
  </thead>
  <tbody id="task-table-body"></tbody>
</table>

<!-- Adicione um container para o mini menu -->
<div id="context-menu" style="display: none; position: absolute;">
  <button class="edit-button">‚úèÔ∏è</button>
  <button class="delete-button">üóëÔ∏è</button>
</div>


/* Adicione isso ao seu arquivo CSS */
#context-menu {
  background: var(--cor-branco);
  border: 1px solid var(--cor-azul-3);
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  border-radius: 5px;
  z-index: 1000;
  padding: 5px;
}
#context-menu button {
  border: none;
  background: none;
  cursor: pointer;
  margin: 2px;
  font-size: 16px;
}


// Atualize seu arquivo JavaScript com as novas funcionalidades

async function fetchTasks() {
    const response = await fetch('/all-task-data');
    const data = await response.json();
    const tasks = data.tasks;
    const tbody = document.querySelector("#task-table-body");
    tasks.forEach(task => {
        const row = document.createElement("tr");
        task.forEach(item => {
            const cell = document.createElement("td");
            cell.textContent = item;
            row.appendChild(cell);
        });

        const actionCell = document.createElement("td");
        actionCell.innerHTML = '<button class="action-button">‚öôÔ∏è</button>';
        row.appendChild(actionCell);

        tbody.appendChild(row);
    });
}

document.addEventListener("DOMContentLoaded", fetchTasks);

document.addEventListener("click", function(event) {
    const contextMenu = document.getElementById("context-menu");

    if (event.target.classList.contains("action-button")) {
        const { top, left } = event.target.getBoundingClientRect();
        contextMenu.style.top = `${top + window.scrollY}px`;
        contextMenu.style.left = `${left + window.scrollX}px`;
        contextMenu.style.display = "block";
    } else if (!event.target.closest("#context-menu")) {
        contextMenu.style.display = "none";
    }
});

document.querySelector(".edit-button").addEventListener("click", function() {
    // Adicione sua l√≥gica de edi√ß√£o aqui
    alert("Editar tarefa!");
});

document.querySelector(".delete-button").addEventListener("click", function() {
    // Adicione sua l√≥gica de exclus√£o aqui
    alert("Excluir tarefa!");
});

async function logout() {
    try {
        const response = await fetch('/logout', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${localStorage.getItem('token')}`
            }
        });

        if (response.ok) {
            console.log("Logout realizado com sucesso.");
            localStorage.removeItem('token');
            window.location.href = '/';
        } else {
            console.error("Erro ao realizar logout: ", response.status);
            alert("N√£o foi poss√≠vel sair. Tente novamente mais tarde.");
        }
    } catch (error) {
        console.error("Erro ao se conectar ao servidor: ", error);
        alert("Erro de conex√£o. Tente novamente.");
        window.location.href = '/';
    }
}

document.querySelector('.logout-button').addEventListener('click', logout);
